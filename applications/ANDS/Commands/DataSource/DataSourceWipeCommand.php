<?php

namespace ANDS\Commands\DataSource;

use ANDS\Commands\ANDSCommand;
use ANDS\RegistryObject;
use ANDS\Repository\DataSourceRepository;
use Symfony\Component\Console\Helper\ProgressBar;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class DataSourceWipeCommand extends ANDSCommand
{
    protected function configure()
    {
        $this
            ->setName('ds:wipe')
            ->setDescription('Wipe a datasource clean')
            ->setHelp("This command allows you to wipe an entire data source from database, SOLR, Mycelium")
            ->addArgument('id', InputArgument::REQUIRED, 'id');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->setUp($input, $output);

        // delete every registry objects for this data source
        $dataSourceId = $input->getArgument('id');
        $dataSource = DataSourceRepository::getByID($dataSourceId);

        $records = RegistryObject::where('data_source_id', $dataSource->id)
            ->orderBy('registry_object_id');

        $progressBar = new ProgressBar($this->getOutput(), $records->count());
        $progressBar->setFormat('ands-command');
        $progressBar->start();

        foreach ($records->chunk(100) as $chunk) {

            $ids = $chunk->pluck('registry_object_id')->toArray();
            $keys = $chunk->pluck('key')->toArray();

            // delete all record data
            \ANDS\RecordData::whereIn('registry_object_id', $ids)->delete();

            // delete all Scholix generated by these records
            \ANDS\Registry\Providers\Scholix\Scholix::whereIn('registry_object_id', $ids)->delete();

            // delete all DCI generated by these records
            \ANDS\Registry\Providers\DCI\DCI::whereIn('registry_object_id', $ids)->delete();

            // delete all Tags generated by these records
            RegistryObject\Tag::whereIn('key', $keys)->delete();

            // delete all registryObjects
            RegistryObject::whereIn('registry_object_id', $ids)->delete();

            $progressBar->advance($chunk->size());
        }

        // delete SOLR portal index
        // data_source_id:$dataSource->id

        // delete mycelium relationship data
        // from_data_source_id OR to_data_source_id

        // delete the data source attributes
        // delete the data source

    }

}